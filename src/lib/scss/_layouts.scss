// basic flexbox with row direction
.row {
    display: flex;
    flex-direction: row;

    // reverses direction
    .rev {
        flex-direction: row-reverse;
    }
}

// basic flexbox with column direction
.col {
    display: flex;
    flex-direction: column;

    // reverses direction
    .rev {
        flex-direction: column-reverse;
    }
}

// for break points
span.break {
    display: inline-block;
}

$phone-max-size: 24rem;
$tablet-max-size: 48rem;
$tablet-portrait-max-size: 64rem;

// phone size only
@mixin phone {
    @media (max-width: $phone-max-size) {
        @content;
    }
}

// tablet size only
@mixin tablet {
    @media (min-width: $phone-max-size) and (max-width: $tablet-max-size) {
        @content;
    }
}

// tablet size and below
@mixin tablet-and-below {
    @media (max-width: $tablet-max-size) {
        @content;
    }
}

// tablet portrait only
@mixin tablet-portrait {
    @media (min-width: $tablet-max-size) and (max-width: $tablet-portrait-max-size) {
        @content;
    }
}

// tablet portrait and below
@mixin tablet-portrait-and-below {
    @media (max-width: $tablet-portrait-max-size) {
        @content;
    }
}

// desktop only
@mixin desktop {
    @media (min-width: $tablet-portrait-max-size) {
        @content;
    }
}

// rules that apply to all sizes are not included in a mixin